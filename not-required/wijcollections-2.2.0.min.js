/*! wijcollections - v2.2.0 - 2013-12-27
* https://github.com/webinfluenza/wijcollections
* Copyright (c) 2013 Benno Mielke; Licensed MIT */
function AbstractCollection(){var a=Math.floor((Math.pow(2,32)-1)/2),b=this;return b.getMaxArrayLength=function(){return a},b.hashCode=function(a){var b=0,c=a.length;if(0===c)return b;for(var d=0;c>d;d++)b=(b<<5)-b+a.charCodeAt(d),b&=b;return b},this.hash=function(a){return a^=a>>>20^a>>>12,a^a>>>7^a>>>4},b.isFloat=function(a){return void 0===a?!1:a.constructor!==Number?!1:a===+a&&a!==(0|a)},b.hashObject=function(a){return a.constructor===Object&&(a=b.sortObjectByKeys(a)),b.needsHashing(a)&&(a=b.getHash(a)),a},!0}function ListObject(){var a=this;a.resetListObject=function(){this.listObject={overallCnt:0,duplicateCnt:0}},a.resetListObject()}function Stack(){var a=this;a.stack=[],a.stackObject=new ListObject}function List(){var a=this;a.list=[],a.listObject=new ListObject}function HashMap(){var a=this;a.keyList=[],this.keyHashToValueHash={},this.valueHashToKeyHash={},this.keyHashToKey={},a.valueList=new ListObject,a.resetHashMap=function(){a.keyList.length=0,a.keyHashToValueHash={},a.keyHashToKey={},a.valueList.reset()},a.resetHashMap()}AbstractCollection.prototype.constructor=AbstractCollection,AbstractCollection.prototype.needsHashing=function(a){if(void 0===a)return null;if(this.isFloat(a))return!0;var b=a.constructor;return b===String||b===Number||b===Boolean||b===Function?!1:!0},AbstractCollection.prototype.getHash=function(a){return void 0!==a&&null!==a?a.constructor===Function?null:a.constructor!==String?this.hash(this.hashCode(JSON.stringify(a)))+"":this.hash(this.hashCode(a))+"":null},AbstractCollection.prototype.sortObjectByKeys=function(a){if(void 0!==a&&a.constructor===Object){var b=[],c={};for(var d in a)a.hasOwnProperty(d)&&b.push(d);b.sort();for(var e=0,f=b.length;f>e;e++)c[b[e]]=a[b[e]];return c}return null},AbstractCollection.prototype.cloneObject=function(a){var b;if(void 0===a)return null;if(a.constructor===Array){b=[];for(var c=0,d=a.length;d>c;c++)b[c]=a[c]}if(a.constructor===Object){b={};for(var e in a)a.hasOwnProperty(e)&&(b[e]=a[e].constructor===Object?this.cloneObject(a[e]):a[e])}return a.constructor===Date&&(b=new Date,b.setTime(a.getTime())),b||null},ListObject.prototype=new AbstractCollection,ListObject.constructor=ListObject,ListObject.prototype.reset=function(){this.resetListObject()},ListObject.prototype.add=function(a,b){var c;return a.constructor===Object&&(a=this.sortObjectByKeys(a)),c=void 0!==b&&b.constructor===String?b:b||this.needsHashing(a)?this.getHash(a):a,void 0===this.listObject[c]?(this.listObject[c]={ref:a,cnt:1},this.listObject.overallCnt++):(this.listObject[c].cnt++,this.listObject.duplicateCnt++),c},ListObject.prototype.contains=function(a){return void 0!==this.listObject[a]},ListObject.prototype.get=function(a){return this.contains(a)?this.listObject[a]:null},ListObject.prototype.getDuplicateCount=function(){return this.listObject.duplicateCnt},ListObject.prototype.getObjectCount=function(a){return this.listObject[a].cnt},ListObject.prototype.delete=function(a){delete this.listObject[a],this.listObject.overallCnt--},ListObject.prototype.remove=function(a){this.getObjectCount(a)>1?(this.listObject[a].cnt--,this.listObject.duplicateCnt--):this.delete(a)},ListObject.prototype.replace=function(a,b,c){var d=this.listObject[a].cnt;return d>1&&(this.listObject.duplicateCnt-=d-1),b.constructor===Object&&(b=this.sortObjectByKeys(b)),this.delete(a),this.add(b,c?a:void 0)},Stack.prototype=new AbstractCollection,Stack.prototype.constructor=Stack,Stack.prototype.empty=function(){return 0===this.stack.length},Stack.prototype.peek=function(){var a,b=this.stack.length,c=this.stackObject.get(this.stack[b-1]);return 1>b?null:a=null!==c?this.cloneObject(c.ref):this.stack[b-1]},Stack.prototype.pop=function(){var a=this.peek(),b=this.stack.length;return 1>b?null:(null!==this.stackObject.get(this.stack[b-1])&&this.stackObject.remove(this.stack[b-1]),this.stack=this.stack.slice(0,-1),a)},Stack.prototype.push=function(a){return void 0===a?null:(this.needsHashing(a)?this.stack.push(this.stackObject.add(a)):this.stack.push(a),a)},Stack.prototype.search=function(a){var b=-1;return void 0===a?null:(b=this.needsHashing(a)?this.stack.lastIndexOf(this.getHash(a)):this.stack.lastIndexOf(a),b>-1?this.stack.length-b:-1)},List.prototype=new AbstractCollection,List.prototype.constructor=List,List.prototype.add=function(a){if(void 0!==a){if(this.needsHashing(a)){var b=this.getHash(a);return this.listObject.contains(b)?this.listObject.add(a):this.list.push(this.listObject.add(a)),!0}return a.constructor===Function?null:(this.list.push(a),!0)}return null},List.prototype.addAt=function(a,b){if(void 0===a)return null;var c=this.size();return void 0!==b&&b.constructor===Number&&b>-1?this.needsHashing(a)&&this.listObject.contains(this.getHash(a))?(this.listObject.add(a),!0):0===b?(this.needsHashing(a)?this.list.unshift(this.listObject.add(a)):this.list.unshift(a),!0):b>0&&c-1>b?(this.needsHashing(a)?this.list.splice(b,0,this.listObject.add(a)):this.list.splice(b,0,a),!0):b>=c-1?(this.needsHashing(a)?this.list.push(this.listObject.add(a)):this.list.push(a),!0):void 0:(this.needsHashing(a)?this.list.push(this.listObject.add(a)):this.list.push(a),!0)},List.prototype.get=function(a){return void 0===a?null:a>=0&&a<this.list.length?this.listObject.contains(this.list[a])?this.listObject.get(this.list[a]).ref:this.list[a]:null},List.prototype.clear=function(){this.list.length=0,this.listObject.reset()},List.prototype.size=function(a){return a?this.list.length+this.listObject.getDuplicateCount():this.list.length},List.prototype.indexOf=function(a){return void 0!==a?this.needsHashing(a)?(a.constructor===Object&&(a=this.sortObjectByKeys(a)),this.list.indexOf(this.getHash(a))):this.list.indexOf(a):-1},List.prototype.contains=function(a){return void 0!==a?this.indexOf(a)>-1:null},List.prototype.isEmpty=function(){return 0===this.list.length},List.prototype.remove=function(a,b){if(void 0===a)return!1;if(this.needsHashing(a)){var c=this.getHash(a),d=this.indexOf(c);if(0>d)return!1;if(!(this.listObject.getObjectCount(c)<2||b))return this.listObject.remove(c),!0;if(this.listObject.delete(c),1===this.list.splice(d,1).length)return!0}else{var e=this.indexOf(a);if(0>e)return!1;if(1===this.list.splice(e,1).length)return!0}return!1},List.prototype.set=function(a,b){var c;return void 0===a||void 0===b?null:0>b||b>=this.size()?null:(null!==this.listObject.get(this.list[b])?(c=this.listObject.get(this.list[b]).ref,this.list[b]=a.constructor===String?a:this.listObject.replace(this.list[b],a)):a.constructor===String?(c=this.list[b],this.list[b]=a):(c=this.list[b],this.list[b]=this.listObject.add(a)),c)},List.prototype.toString=function(){return this.list.toString()},HashMap.prototype=new AbstractCollection,HashMap.prototype.constructor=HashMap,HashMap.prototype.clear=function(){this.resetHashMap()},HashMap.prototype.clone=function(){var a=new HashMap;return a.putAll(this),a},HashMap.prototype.containsKey=function(a){return void 0===a?!1:(a=this.hashObject(a),void 0!==this.keyHashToKey[a])},HashMap.prototype.containsValue=function(a){if(void 0===a)return!1;var b=this.hashObject(a);return void 0!==this.valueHashToKeyHash[b]},HashMap.prototype.get=function(a){return this.containsKey(a)===!1?null:(a=this.hashObject(a),this.valueList.get(a).ref)},HashMap.prototype.isEmpty=function(){return 0===this.keyList.length},HashMap.prototype.keySet=function(){return this.keyList},HashMap.prototype.put=function(a,b){if(void 0===a||void 0===b||null===a)return null;a.constructor===Object&&(a=this.sortObjectByKeys(a));var c=this.hashObject(a),d=this.hashObject(b);if(void 0!==this.keyHashToKey[c]){var e=this.valueList.get(c).ref,f=this.hashObject(e);return this.valueList.replace(c,b,!0),this.keyHashToValueHash[c]=d,this.valueHashToKeyHash[d]=c,delete this.valueHashToKeyHash[f],e}return this.keyList.push(a),this.valueList.add(b,c),this.keyHashToValueHash[c]=d,this.valueHashToKeyHash[d]=c,this.keyHashToKey[c]=a,null},HashMap.prototype.putAll=function(a){if(void 0===a||a.constructor!==HashMap)return null;var b=a.keySet();for(var c in b)this.put(b[c],a.get(b[c]))},HashMap.prototype.remove=function(a){if(void 0===a)return null;if(a=this.hashObject(a),void 0===this.keyHashToKey[a])return null;var b=this.valueList.get(a).ref,c=this.hashObject(b);delete this.keyHashToKey[a],delete this.keyHashToValueHash[a],delete this.valueHashToKeyHash[c],this.valueList.delete(a);for(var d=0,e=this.keyList.length;e>d;d++){var f=this.hashObject(this.keyList[d]);if(a===f)return this.keyList.splice(d,1),b}return null},HashMap.prototype.size=function(){return this.keyList.length>=this.getMaxArrayLength()?this.getMaxArrayLength():this.keyList.length},HashMap.prototype.values=function(){var a=[];for(var b in this.valueList.listObject){var c=this.valueList.get(b).ref;void 0!==c&&a.push(c)}return a};