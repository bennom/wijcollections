/*! wijcollections - v2.2.0 - 2013-12-27
* https://github.com/webinfluenza/wijcollections
* Copyright (c) 2013 Benno Mielke; Licensed MIT */

define(["private/AbstractCollection","private/ListObject"],function(t,e){function s(){var t=this;t.keyList=[],this.keyHashToValueHash={},this.valueHashToKeyHash={},this.keyHashToKey={},t.valueList=new e,t.resetHashMap=function(){t.keyList.length=0,t.keyHashToValueHash={},t.keyHashToKey={},t.valueList.reset()},t.resetHashMap()}return s.prototype=new t,s.prototype.constructor=s,s.prototype.clear=function(){this.resetHashMap()},s.prototype.clone=function(){var t=new s;return t.putAll(this),t},s.prototype.containsKey=function(t){return void 0===t?!1:(t=this.hashObject(t),void 0!==this.keyHashToKey[t])},s.prototype.containsValue=function(t){if(void 0===t)return!1;var e=this.hashObject(t);return void 0!==this.valueHashToKeyHash[e]},s.prototype.get=function(t){return this.containsKey(t)===!1?null:(t=this.hashObject(t),this.valueList.get(t).ref)},s.prototype.isEmpty=function(){return 0===this.keyList.length},s.prototype.keySet=function(){return this.keyList},s.prototype.put=function(t,e){if(void 0===t||void 0===e||null===t)return null;t.constructor===Object&&(t=this.sortObjectByKeys(t));var s=this.hashObject(t),i=this.hashObject(e);if(void 0!==this.keyHashToKey[s]){var h=this.valueList.get(s).ref,a=this.hashObject(h);return this.valueList.replace(s,e,!0),this.keyHashToValueHash[s]=i,this.valueHashToKeyHash[i]=s,delete this.valueHashToKeyHash[a],h}return this.keyList.push(t),this.valueList.add(e,s),this.keyHashToValueHash[s]=i,this.valueHashToKeyHash[i]=s,this.keyHashToKey[s]=t,null},s.prototype.putAll=function(t){if(void 0===t||t.constructor!==s)return null;var e=t.keySet();for(var i in e)this.put(e[i],t.get(e[i]))},s.prototype.remove=function(t){if(void 0===t)return null;if(t=this.hashObject(t),void 0===this.keyHashToKey[t])return null;var e=this.valueList.get(t).ref,s=this.hashObject(e);delete this.keyHashToKey[t],delete this.keyHashToValueHash[t],delete this.valueHashToKeyHash[s],this.valueList.delete(t);for(var i=0,h=this.keyList.length;h>i;i++){var a=this.hashObject(this.keyList[i]);if(t===a)return this.keyList.splice(i,1),e}return null},s.prototype.size=function(){return this.keyList.length>=this.getMaxArrayLength()?this.getMaxArrayLength():this.keyList.length},s.prototype.values=function(){var t=[];for(var e in this.valueList.listObject){var s=this.valueList.get(e).ref;void 0!==s&&t.push(s)}return t},s});